#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TopCareWebApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TopCare")]
	public partial class TopCareDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCompanyProfile(CompanyProfile instance);
    partial void UpdateCompanyProfile(CompanyProfile instance);
    partial void DeleteCompanyProfile(CompanyProfile instance);
    partial void InsertTransportationOption(TransportationOption instance);
    partial void UpdateTransportationOption(TransportationOption instance);
    partial void DeleteTransportationOption(TransportationOption instance);
    partial void InsertMemberAttendance(MemberAttendance instance);
    partial void UpdateMemberAttendance(MemberAttendance instance);
    partial void DeleteMemberAttendance(MemberAttendance instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertMemberSubscriptionsPaid(MemberSubscriptionsPaid instance);
    partial void UpdateMemberSubscriptionsPaid(MemberSubscriptionsPaid instance);
    partial void DeleteMemberSubscriptionsPaid(MemberSubscriptionsPaid instance);
    partial void InsertNationality(Nationality instance);
    partial void UpdateNationality(Nationality instance);
    partial void DeleteNationality(Nationality instance);
    partial void InsertPaymentMethod(PaymentMethod instance);
    partial void UpdatePaymentMethod(PaymentMethod instance);
    partial void DeletePaymentMethod(PaymentMethod instance);
    partial void InsertPreScheduleFollowup(PreScheduleFollowup instance);
    partial void UpdatePreScheduleFollowup(PreScheduleFollowup instance);
    partial void DeletePreScheduleFollowup(PreScheduleFollowup instance);
    partial void InsertPreScheduleFollowupDetail(PreScheduleFollowupDetail instance);
    partial void UpdatePreScheduleFollowupDetail(PreScheduleFollowupDetail instance);
    partial void DeletePreScheduleFollowupDetail(PreScheduleFollowupDetail instance);
    partial void InsertRSVPStatus(RSVPStatus instance);
    partial void UpdateRSVPStatus(RSVPStatus instance);
    partial void DeleteRSVPStatus(RSVPStatus instance);
    partial void InsertScheduleDetail(ScheduleDetail instance);
    partial void UpdateScheduleDetail(ScheduleDetail instance);
    partial void DeleteScheduleDetail(ScheduleDetail instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertSubscriptionYear(SubscriptionYear instance);
    partial void UpdateSubscriptionYear(SubscriptionYear instance);
    partial void DeleteSubscriptionYear(SubscriptionYear instance);
    partial void InsertTeamMember(TeamMember instance);
    partial void UpdateTeamMember(TeamMember instance);
    partial void DeleteTeamMember(TeamMember instance);
    partial void InsertTransportArrangementStatus(TransportArrangementStatus instance);
    partial void UpdateTransportArrangementStatus(TransportArrangementStatus instance);
    partial void DeleteTransportArrangementStatus(TransportArrangementStatus instance);
    partial void InsertProgrameTimeTemplate(ProgrameTimeTemplate instance);
    partial void UpdateProgrameTimeTemplate(ProgrameTimeTemplate instance);
    partial void DeleteProgrameTimeTemplate(ProgrameTimeTemplate instance);
    partial void InsertNotificationStaff(NotificationStaff instance);
    partial void UpdateNotificationStaff(NotificationStaff instance);
    partial void DeleteNotificationStaff(NotificationStaff instance);
    partial void InsertNotificationType(NotificationType instance);
    partial void UpdateNotificationType(NotificationType instance);
    partial void DeleteNotificationType(NotificationType instance);
    partial void InsertNotification(Notification instance);
    partial void UpdateNotification(Notification instance);
    partial void DeleteNotification(Notification instance);
    partial void InsertAddonService(AddonService instance);
    partial void UpdateAddonService(AddonService instance);
    partial void DeleteAddonService(AddonService instance);
    partial void InsertAddonServiceType(AddonServiceType instance);
    partial void UpdateAddonServiceType(AddonServiceType instance);
    partial void DeleteAddonServiceType(AddonServiceType instance);
    partial void InsertDBSSTaff(DBSSTaff instance);
    partial void UpdateDBSSTaff(DBSSTaff instance);
    partial void DeleteDBSSTaff(DBSSTaff instance);
    #endregion
		
		public TopCareDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TopCareConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TopCareDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TopCareDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TopCareDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TopCareDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CompanyProfile> CompanyProfiles
		{
			get
			{
				return this.GetTable<CompanyProfile>();
			}
		}
		
		public System.Data.Linq.Table<TransportationOption> TransportationOptions
		{
			get
			{
				return this.GetTable<TransportationOption>();
			}
		}
		
		public System.Data.Linq.Table<MemberAttendance> MemberAttendances
		{
			get
			{
				return this.GetTable<MemberAttendance>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<MemberSubscriptionsPaid> MemberSubscriptionsPaids
		{
			get
			{
				return this.GetTable<MemberSubscriptionsPaid>();
			}
		}
		
		public System.Data.Linq.Table<Nationality> Nationalities
		{
			get
			{
				return this.GetTable<Nationality>();
			}
		}
		
		public System.Data.Linq.Table<PaymentMethod> PaymentMethods
		{
			get
			{
				return this.GetTable<PaymentMethod>();
			}
		}
		
		public System.Data.Linq.Table<PreScheduleFollowup> PreScheduleFollowups
		{
			get
			{
				return this.GetTable<PreScheduleFollowup>();
			}
		}
		
		public System.Data.Linq.Table<PreScheduleFollowupDetail> PreScheduleFollowupDetails
		{
			get
			{
				return this.GetTable<PreScheduleFollowupDetail>();
			}
		}
		
		public System.Data.Linq.Table<RSVPStatus> RSVPStatus
		{
			get
			{
				return this.GetTable<RSVPStatus>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleDetail> ScheduleDetails
		{
			get
			{
				return this.GetTable<ScheduleDetail>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionYear> SubscriptionYears
		{
			get
			{
				return this.GetTable<SubscriptionYear>();
			}
		}
		
		public System.Data.Linq.Table<TeamMember> TeamMembers
		{
			get
			{
				return this.GetTable<TeamMember>();
			}
		}
		
		public System.Data.Linq.Table<TransportArrangementStatus> TransportArrangementStatus
		{
			get
			{
				return this.GetTable<TransportArrangementStatus>();
			}
		}
		
		public System.Data.Linq.Table<vwMemberAttendance> vwMemberAttendances
		{
			get
			{
				return this.GetTable<vwMemberAttendance>();
			}
		}
		
		public System.Data.Linq.Table<vwSubscriptionSummary> vwSubscriptionSummaries
		{
			get
			{
				return this.GetTable<vwSubscriptionSummary>();
			}
		}
		
		public System.Data.Linq.Table<vwPreScheduleFollowup> vwPreScheduleFollowups
		{
			get
			{
				return this.GetTable<vwPreScheduleFollowup>();
			}
		}
		
		public System.Data.Linq.Table<ProgrameTimeTemplate> ProgrameTimeTemplates
		{
			get
			{
				return this.GetTable<ProgrameTimeTemplate>();
			}
		}
		
		public System.Data.Linq.Table<NotificationStaff> NotificationStaffs
		{
			get
			{
				return this.GetTable<NotificationStaff>();
			}
		}
		
		public System.Data.Linq.Table<NotificationType> NotificationTypes
		{
			get
			{
				return this.GetTable<NotificationType>();
			}
		}
		
		public System.Data.Linq.Table<Notification> Notifications
		{
			get
			{
				return this.GetTable<Notification>();
			}
		}
		
		public System.Data.Linq.Table<AddonService> AddonServices
		{
			get
			{
				return this.GetTable<AddonService>();
			}
		}
		
		public System.Data.Linq.Table<AddonServiceType> AddonServiceTypes
		{
			get
			{
				return this.GetTable<AddonServiceType>();
			}
		}
		
		public System.Data.Linq.Table<DBSSTaff> DBSSTaffs
		{
			get
			{
				return this.GetTable<DBSSTaff>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsSubscriptionPaid", IsComposable=true)]
		public System.Nullable<bool> IsSubscriptionPaid([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberID", DbType="Int")] System.Nullable<int> memberID)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), memberID).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyProfile")]
	public partial class CompanyProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private string _CompanyName;
		
		private string _SmtpServer;
		
		private System.Nullable<int> _smtpPort;
		
		private string _SmtpEmailAddress;
		
		private string _SmtpPassword;
		
		private System.Nullable<decimal> _SubscriptionFeeToBeCharged;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnSmtpServerChanging(string value);
    partial void OnSmtpServerChanged();
    partial void OnsmtpPortChanging(System.Nullable<int> value);
    partial void OnsmtpPortChanged();
    partial void OnSmtpEmailAddressChanging(string value);
    partial void OnSmtpEmailAddressChanged();
    partial void OnSmtpPasswordChanging(string value);
    partial void OnSmtpPasswordChanged();
    partial void OnSubscriptionFeeToBeChargedChanging(System.Nullable<decimal> value);
    partial void OnSubscriptionFeeToBeChargedChanged();
    #endregion
		
		public CompanyProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(500)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmtpServer", DbType="NVarChar(50)")]
		public string SmtpServer
		{
			get
			{
				return this._SmtpServer;
			}
			set
			{
				if ((this._SmtpServer != value))
				{
					this.OnSmtpServerChanging(value);
					this.SendPropertyChanging();
					this._SmtpServer = value;
					this.SendPropertyChanged("SmtpServer");
					this.OnSmtpServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smtpPort", DbType="Int")]
		public System.Nullable<int> smtpPort
		{
			get
			{
				return this._smtpPort;
			}
			set
			{
				if ((this._smtpPort != value))
				{
					this.OnsmtpPortChanging(value);
					this.SendPropertyChanging();
					this._smtpPort = value;
					this.SendPropertyChanged("smtpPort");
					this.OnsmtpPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmtpEmailAddress", DbType="NVarChar(50)")]
		public string SmtpEmailAddress
		{
			get
			{
				return this._SmtpEmailAddress;
			}
			set
			{
				if ((this._SmtpEmailAddress != value))
				{
					this.OnSmtpEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._SmtpEmailAddress = value;
					this.SendPropertyChanged("SmtpEmailAddress");
					this.OnSmtpEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmtpPassword", DbType="NVarChar(50)")]
		public string SmtpPassword
		{
			get
			{
				return this._SmtpPassword;
			}
			set
			{
				if ((this._SmtpPassword != value))
				{
					this.OnSmtpPasswordChanging(value);
					this.SendPropertyChanging();
					this._SmtpPassword = value;
					this.SendPropertyChanged("SmtpPassword");
					this.OnSmtpPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionFeeToBeCharged", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SubscriptionFeeToBeCharged
		{
			get
			{
				return this._SubscriptionFeeToBeCharged;
			}
			set
			{
				if ((this._SubscriptionFeeToBeCharged != value))
				{
					this.OnSubscriptionFeeToBeChargedChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionFeeToBeCharged = value;
					this.SendPropertyChanged("SubscriptionFeeToBeCharged");
					this.OnSubscriptionFeeToBeChargedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportationOptions")]
	public partial class TransportationOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransportationOptionID;
		
		private string _Description;
		
		private System.Nullable<bool> _MustHaveMembershipID;
		
		private string _NumberToCall;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransportationOptionIDChanging(int value);
    partial void OnTransportationOptionIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMustHaveMembershipIDChanging(System.Nullable<bool> value);
    partial void OnMustHaveMembershipIDChanged();
    partial void OnNumberToCallChanging(string value);
    partial void OnNumberToCallChanged();
    #endregion
		
		public TransportationOption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportationOptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransportationOptionID
		{
			get
			{
				return this._TransportationOptionID;
			}
			set
			{
				if ((this._TransportationOptionID != value))
				{
					this.OnTransportationOptionIDChanging(value);
					this.SendPropertyChanging();
					this._TransportationOptionID = value;
					this.SendPropertyChanged("TransportationOptionID");
					this.OnTransportationOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MustHaveMembershipID", DbType="Bit")]
		public System.Nullable<bool> MustHaveMembershipID
		{
			get
			{
				return this._MustHaveMembershipID;
			}
			set
			{
				if ((this._MustHaveMembershipID != value))
				{
					this.OnMustHaveMembershipIDChanging(value);
					this.SendPropertyChanging();
					this._MustHaveMembershipID = value;
					this.SendPropertyChanged("MustHaveMembershipID");
					this.OnMustHaveMembershipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberToCall", DbType="NVarChar(50)")]
		public string NumberToCall
		{
			get
			{
				return this._NumberToCall;
			}
			set
			{
				if ((this._NumberToCall != value))
				{
					this.OnNumberToCallChanging(value);
					this.SendPropertyChanging();
					this._NumberToCall = value;
					this.SendPropertyChanged("NumberToCall");
					this.OnNumberToCallChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberAttendance")]
	public partial class MemberAttendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberAttendanceID;
		
		private System.Nullable<int> _ScheduleID;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<bool> _HasAttended;
		
		private System.Nullable<bool> _HasPaid;
		
		private System.Nullable<decimal> _AmountPaid;
		
		private string _PaymentRecievedBy;
		
		private System.Nullable<int> _PaymentMethodID;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private string _Narration;
		
		private System.Nullable<bool> _IsFeeWaived;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberAttendanceIDChanging(int value);
    partial void OnMemberAttendanceIDChanged();
    partial void OnScheduleIDChanging(System.Nullable<int> value);
    partial void OnScheduleIDChanged();
    partial void OnMemberIDChanging(System.Nullable<int> value);
    partial void OnMemberIDChanged();
    partial void OnHasAttendedChanging(System.Nullable<bool> value);
    partial void OnHasAttendedChanged();
    partial void OnHasPaidChanging(System.Nullable<bool> value);
    partial void OnHasPaidChanged();
    partial void OnAmountPaidChanging(System.Nullable<decimal> value);
    partial void OnAmountPaidChanged();
    partial void OnPaymentRecievedByChanging(string value);
    partial void OnPaymentRecievedByChanged();
    partial void OnPaymentMethodIDChanging(System.Nullable<int> value);
    partial void OnPaymentMethodIDChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnNarrationChanging(string value);
    partial void OnNarrationChanged();
    partial void OnIsFeeWaivedChanging(System.Nullable<bool> value);
    partial void OnIsFeeWaivedChanged();
    #endregion
		
		public MemberAttendance()
		{
			this._Member = default(EntityRef<Member>);
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberAttendanceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberAttendanceID
		{
			get
			{
				return this._MemberAttendanceID;
			}
			set
			{
				if ((this._MemberAttendanceID != value))
				{
					this.OnMemberAttendanceIDChanging(value);
					this.SendPropertyChanging();
					this._MemberAttendanceID = value;
					this.SendPropertyChanged("MemberAttendanceID");
					this.OnMemberAttendanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int")]
		public System.Nullable<int> ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttended", DbType="Bit")]
		public System.Nullable<bool> HasAttended
		{
			get
			{
				return this._HasAttended;
			}
			set
			{
				if ((this._HasAttended != value))
				{
					this.OnHasAttendedChanging(value);
					this.SendPropertyChanging();
					this._HasAttended = value;
					this.SendPropertyChanged("HasAttended");
					this.OnHasAttendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPaid", DbType="Bit")]
		public System.Nullable<bool> HasPaid
		{
			get
			{
				return this._HasPaid;
			}
			set
			{
				if ((this._HasPaid != value))
				{
					this.OnHasPaidChanging(value);
					this.SendPropertyChanging();
					this._HasPaid = value;
					this.SendPropertyChanged("HasPaid");
					this.OnHasPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRecievedBy", DbType="NVarChar(50)")]
		public string PaymentRecievedBy
		{
			get
			{
				return this._PaymentRecievedBy;
			}
			set
			{
				if ((this._PaymentRecievedBy != value))
				{
					this.OnPaymentRecievedByChanging(value);
					this.SendPropertyChanging();
					this._PaymentRecievedBy = value;
					this.SendPropertyChanged("PaymentRecievedBy");
					this.OnPaymentRecievedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodID", DbType="Int")]
		public System.Nullable<int> PaymentMethodID
		{
			get
			{
				return this._PaymentMethodID;
			}
			set
			{
				if ((this._PaymentMethodID != value))
				{
					this.OnPaymentMethodIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodID = value;
					this.SendPropertyChanged("PaymentMethodID");
					this.OnPaymentMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Narration", DbType="NVarChar(50)")]
		public string Narration
		{
			get
			{
				return this._Narration;
			}
			set
			{
				if ((this._Narration != value))
				{
					this.OnNarrationChanging(value);
					this.SendPropertyChanging();
					this._Narration = value;
					this.SendPropertyChanged("Narration");
					this.OnNarrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFeeWaived", DbType="Bit")]
		public System.Nullable<bool> IsFeeWaived
		{
			get
			{
				return this._IsFeeWaived;
			}
			set
			{
				if ((this._IsFeeWaived != value))
				{
					this.OnIsFeeWaivedChanging(value);
					this.SendPropertyChanging();
					this._IsFeeWaived = value;
					this.SendPropertyChanged("IsFeeWaived");
					this.OnIsFeeWaivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberAttendance", Storage="_Member", ThisKey="MemberID", OtherKey="MemberID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MemberAttendances.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MemberAttendances.Add(this);
						this._MemberID = value.MemberID;
					}
					else
					{
						this._MemberID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_MemberAttendance", Storage="_Schedule", ThisKey="ScheduleID", OtherKey="ScheduleID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.MemberAttendances.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.MemberAttendances.Add(this);
						this._ScheduleID = value.ScheduleID;
					}
					else
					{
						this._ScheduleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Members")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Address;
		
		private string _Postcode;
		
		private System.Nullable<int> _NationalityID;
		
		private string _DietaryRequirements;
		
		private string _NextOfKin_Name;
		
		private string _NextOfKin_Address;
		
		private string _NextOfKin_Postcode;
		
		private string _NextOfKin_PhoneNumber;
		
		private string _PhoneNumber1;
		
		private string _PhoneNumber2;
		
		private string _PhoneNumber3;
		
		private string _EmailAddress;
		
		private string _MemberTransportationID;
		
		private System.Nullable<int> _TransportationOptionID;
		
		private string _Remarks;
		
		private EntitySet<MemberAttendance> _MemberAttendances;
		
		private EntitySet<MemberSubscriptionsPaid> _MemberSubscriptionsPaids;
		
		private EntitySet<AddonService> _AddonServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnNationalityIDChanging(System.Nullable<int> value);
    partial void OnNationalityIDChanged();
    partial void OnDietaryRequirementsChanging(string value);
    partial void OnDietaryRequirementsChanged();
    partial void OnNextOfKin_NameChanging(string value);
    partial void OnNextOfKin_NameChanged();
    partial void OnNextOfKin_AddressChanging(string value);
    partial void OnNextOfKin_AddressChanged();
    partial void OnNextOfKin_PostcodeChanging(string value);
    partial void OnNextOfKin_PostcodeChanged();
    partial void OnNextOfKin_PhoneNumberChanging(string value);
    partial void OnNextOfKin_PhoneNumberChanged();
    partial void OnPhoneNumber1Changing(string value);
    partial void OnPhoneNumber1Changed();
    partial void OnPhoneNumber2Changing(string value);
    partial void OnPhoneNumber2Changed();
    partial void OnPhoneNumber3Changing(string value);
    partial void OnPhoneNumber3Changed();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnMemberTransportationIDChanging(string value);
    partial void OnMemberTransportationIDChanged();
    partial void OnTransportationOptionIDChanging(System.Nullable<int> value);
    partial void OnTransportationOptionIDChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public Member()
		{
			this._MemberAttendances = new EntitySet<MemberAttendance>(new Action<MemberAttendance>(this.attach_MemberAttendances), new Action<MemberAttendance>(this.detach_MemberAttendances));
			this._MemberSubscriptionsPaids = new EntitySet<MemberSubscriptionsPaid>(new Action<MemberSubscriptionsPaid>(this.attach_MemberSubscriptionsPaids), new Action<MemberSubscriptionsPaid>(this.detach_MemberSubscriptionsPaids));
			this._AddonServices = new EntitySet<AddonService>(new Action<AddonService>(this.attach_AddonServices), new Action<AddonService>(this.detach_AddonServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(50)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityID", DbType="Int")]
		public System.Nullable<int> NationalityID
		{
			get
			{
				return this._NationalityID;
			}
			set
			{
				if ((this._NationalityID != value))
				{
					this.OnNationalityIDChanging(value);
					this.SendPropertyChanging();
					this._NationalityID = value;
					this.SendPropertyChanged("NationalityID");
					this.OnNationalityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DietaryRequirements", DbType="NVarChar(300)")]
		public string DietaryRequirements
		{
			get
			{
				return this._DietaryRequirements;
			}
			set
			{
				if ((this._DietaryRequirements != value))
				{
					this.OnDietaryRequirementsChanging(value);
					this.SendPropertyChanging();
					this._DietaryRequirements = value;
					this.SendPropertyChanged("DietaryRequirements");
					this.OnDietaryRequirementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextOfKin_Name", DbType="NVarChar(50)")]
		public string NextOfKin_Name
		{
			get
			{
				return this._NextOfKin_Name;
			}
			set
			{
				if ((this._NextOfKin_Name != value))
				{
					this.OnNextOfKin_NameChanging(value);
					this.SendPropertyChanging();
					this._NextOfKin_Name = value;
					this.SendPropertyChanged("NextOfKin_Name");
					this.OnNextOfKin_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextOfKin_Address", DbType="NVarChar(50)")]
		public string NextOfKin_Address
		{
			get
			{
				return this._NextOfKin_Address;
			}
			set
			{
				if ((this._NextOfKin_Address != value))
				{
					this.OnNextOfKin_AddressChanging(value);
					this.SendPropertyChanging();
					this._NextOfKin_Address = value;
					this.SendPropertyChanged("NextOfKin_Address");
					this.OnNextOfKin_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextOfKin_Postcode", DbType="NVarChar(50)")]
		public string NextOfKin_Postcode
		{
			get
			{
				return this._NextOfKin_Postcode;
			}
			set
			{
				if ((this._NextOfKin_Postcode != value))
				{
					this.OnNextOfKin_PostcodeChanging(value);
					this.SendPropertyChanging();
					this._NextOfKin_Postcode = value;
					this.SendPropertyChanged("NextOfKin_Postcode");
					this.OnNextOfKin_PostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextOfKin_PhoneNumber", DbType="NVarChar(50)")]
		public string NextOfKin_PhoneNumber
		{
			get
			{
				return this._NextOfKin_PhoneNumber;
			}
			set
			{
				if ((this._NextOfKin_PhoneNumber != value))
				{
					this.OnNextOfKin_PhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._NextOfKin_PhoneNumber = value;
					this.SendPropertyChanged("NextOfKin_PhoneNumber");
					this.OnNextOfKin_PhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber1", DbType="NVarChar(50)")]
		public string PhoneNumber1
		{
			get
			{
				return this._PhoneNumber1;
			}
			set
			{
				if ((this._PhoneNumber1 != value))
				{
					this.OnPhoneNumber1Changing(value);
					this.SendPropertyChanging();
					this._PhoneNumber1 = value;
					this.SendPropertyChanged("PhoneNumber1");
					this.OnPhoneNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber2", DbType="NVarChar(50)")]
		public string PhoneNumber2
		{
			get
			{
				return this._PhoneNumber2;
			}
			set
			{
				if ((this._PhoneNumber2 != value))
				{
					this.OnPhoneNumber2Changing(value);
					this.SendPropertyChanging();
					this._PhoneNumber2 = value;
					this.SendPropertyChanged("PhoneNumber2");
					this.OnPhoneNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber3", DbType="NVarChar(50)")]
		public string PhoneNumber3
		{
			get
			{
				return this._PhoneNumber3;
			}
			set
			{
				if ((this._PhoneNumber3 != value))
				{
					this.OnPhoneNumber3Changing(value);
					this.SendPropertyChanging();
					this._PhoneNumber3 = value;
					this.SendPropertyChanged("PhoneNumber3");
					this.OnPhoneNumber3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(500)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberTransportationID", DbType="NVarChar(100)")]
		public string MemberTransportationID
		{
			get
			{
				return this._MemberTransportationID;
			}
			set
			{
				if ((this._MemberTransportationID != value))
				{
					this.OnMemberTransportationIDChanging(value);
					this.SendPropertyChanging();
					this._MemberTransportationID = value;
					this.SendPropertyChanged("MemberTransportationID");
					this.OnMemberTransportationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportationOptionID", DbType="Int")]
		public System.Nullable<int> TransportationOptionID
		{
			get
			{
				return this._TransportationOptionID;
			}
			set
			{
				if ((this._TransportationOptionID != value))
				{
					this.OnTransportationOptionIDChanging(value);
					this.SendPropertyChanging();
					this._TransportationOptionID = value;
					this.SendPropertyChanged("TransportationOptionID");
					this.OnTransportationOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberAttendance", Storage="_MemberAttendances", ThisKey="MemberID", OtherKey="MemberID")]
		public EntitySet<MemberAttendance> MemberAttendances
		{
			get
			{
				return this._MemberAttendances;
			}
			set
			{
				this._MemberAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberSubscriptionsPaid", Storage="_MemberSubscriptionsPaids", ThisKey="MemberID", OtherKey="MemberID")]
		public EntitySet<MemberSubscriptionsPaid> MemberSubscriptionsPaids
		{
			get
			{
				return this._MemberSubscriptionsPaids;
			}
			set
			{
				this._MemberSubscriptionsPaids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_AddonService", Storage="_AddonServices", ThisKey="MemberID", OtherKey="MemberId")]
		public EntitySet<AddonService> AddonServices
		{
			get
			{
				return this._AddonServices;
			}
			set
			{
				this._AddonServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MemberAttendances(MemberAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MemberAttendances(MemberAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_MemberSubscriptionsPaids(MemberSubscriptionsPaid entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MemberSubscriptionsPaids(MemberSubscriptionsPaid entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_AddonServices(AddonService entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_AddonServices(AddonService entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberSubscriptionsPaid")]
	public partial class MemberSubscriptionsPaid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberSubscriptionPaidID;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<decimal> _AmountPaid;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private string _PaymentRecievedBy;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsOpen;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private System.Nullable<bool> _IsWaived;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberSubscriptionPaidIDChanging(int value);
    partial void OnMemberSubscriptionPaidIDChanged();
    partial void OnMemberIDChanging(System.Nullable<int> value);
    partial void OnMemberIDChanged();
    partial void OnAmountPaidChanging(System.Nullable<decimal> value);
    partial void OnAmountPaidChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnPaymentRecievedByChanging(string value);
    partial void OnPaymentRecievedByChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsOpenChanging(System.Nullable<bool> value);
    partial void OnIsOpenChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnIsWaivedChanging(System.Nullable<bool> value);
    partial void OnIsWaivedChanged();
    #endregion
		
		public MemberSubscriptionsPaid()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberSubscriptionPaidID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberSubscriptionPaidID
		{
			get
			{
				return this._MemberSubscriptionPaidID;
			}
			set
			{
				if ((this._MemberSubscriptionPaidID != value))
				{
					this.OnMemberSubscriptionPaidIDChanging(value);
					this.SendPropertyChanging();
					this._MemberSubscriptionPaidID = value;
					this.SendPropertyChanged("MemberSubscriptionPaidID");
					this.OnMemberSubscriptionPaidIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRecievedBy", DbType="NVarChar(50)")]
		public string PaymentRecievedBy
		{
			get
			{
				return this._PaymentRecievedBy;
			}
			set
			{
				if ((this._PaymentRecievedBy != value))
				{
					this.OnPaymentRecievedByChanging(value);
					this.SendPropertyChanging();
					this._PaymentRecievedBy = value;
					this.SendPropertyChanged("PaymentRecievedBy");
					this.OnPaymentRecievedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOpen", DbType="Bit")]
		public System.Nullable<bool> IsOpen
		{
			get
			{
				return this._IsOpen;
			}
			set
			{
				if ((this._IsOpen != value))
				{
					this.OnIsOpenChanging(value);
					this.SendPropertyChanging();
					this._IsOpen = value;
					this.SendPropertyChanged("IsOpen");
					this.OnIsOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWaived", DbType="Bit")]
		public System.Nullable<bool> IsWaived
		{
			get
			{
				return this._IsWaived;
			}
			set
			{
				if ((this._IsWaived != value))
				{
					this.OnIsWaivedChanging(value);
					this.SendPropertyChanging();
					this._IsWaived = value;
					this.SendPropertyChanged("IsWaived");
					this.OnIsWaivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberSubscriptionsPaid", Storage="_Member", ThisKey="MemberID", OtherKey="MemberID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MemberSubscriptionsPaids.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MemberSubscriptionsPaids.Add(this);
						this._MemberID = value.MemberID;
					}
					else
					{
						this._MemberID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nationalities")]
	public partial class Nationality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NationalityID;
		
		private string _Decription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNationalityIDChanging(int value);
    partial void OnNationalityIDChanged();
    partial void OnDecriptionChanging(string value);
    partial void OnDecriptionChanged();
    #endregion
		
		public Nationality()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NationalityID
		{
			get
			{
				return this._NationalityID;
			}
			set
			{
				if ((this._NationalityID != value))
				{
					this.OnNationalityIDChanging(value);
					this.SendPropertyChanging();
					this._NationalityID = value;
					this.SendPropertyChanged("NationalityID");
					this.OnNationalityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decription", DbType="NVarChar(50)")]
		public string Decription
		{
			get
			{
				return this._Decription;
			}
			set
			{
				if ((this._Decription != value))
				{
					this.OnDecriptionChanging(value);
					this.SendPropertyChanging();
					this._Decription = value;
					this.SendPropertyChanged("Decription");
					this.OnDecriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentMethods")]
	public partial class PaymentMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentMethodID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentMethodIDChanging(int value);
    partial void OnPaymentMethodIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PaymentMethod()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentMethodID
		{
			get
			{
				return this._PaymentMethodID;
			}
			set
			{
				if ((this._PaymentMethodID != value))
				{
					this.OnPaymentMethodIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodID = value;
					this.SendPropertyChanged("PaymentMethodID");
					this.OnPaymentMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreScheduleFollowup")]
	public partial class PreScheduleFollowup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PreScheduleFollowupID;
		
		private string _FollowupDoneBy;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private string _CreatedBy;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ScheduleID;
		
		private EntitySet<PreScheduleFollowupDetail> _PreScheduleFollowupDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPreScheduleFollowupIDChanging(int value);
    partial void OnPreScheduleFollowupIDChanged();
    partial void OnFollowupDoneByChanging(string value);
    partial void OnFollowupDoneByChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnScheduleIDChanging(System.Nullable<int> value);
    partial void OnScheduleIDChanged();
    #endregion
		
		public PreScheduleFollowup()
		{
			this._PreScheduleFollowupDetails = new EntitySet<PreScheduleFollowupDetail>(new Action<PreScheduleFollowupDetail>(this.attach_PreScheduleFollowupDetails), new Action<PreScheduleFollowupDetail>(this.detach_PreScheduleFollowupDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreScheduleFollowupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PreScheduleFollowupID
		{
			get
			{
				return this._PreScheduleFollowupID;
			}
			set
			{
				if ((this._PreScheduleFollowupID != value))
				{
					this.OnPreScheduleFollowupIDChanging(value);
					this.SendPropertyChanging();
					this._PreScheduleFollowupID = value;
					this.SendPropertyChanged("PreScheduleFollowupID");
					this.OnPreScheduleFollowupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowupDoneBy", DbType="NVarChar(50)")]
		public string FollowupDoneBy
		{
			get
			{
				return this._FollowupDoneBy;
			}
			set
			{
				if ((this._FollowupDoneBy != value))
				{
					this.OnFollowupDoneByChanging(value);
					this.SendPropertyChanging();
					this._FollowupDoneBy = value;
					this.SendPropertyChanged("FollowupDoneBy");
					this.OnFollowupDoneByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int")]
		public System.Nullable<int> ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PreScheduleFollowup_PreScheduleFollowupDetail", Storage="_PreScheduleFollowupDetails", ThisKey="PreScheduleFollowupID", OtherKey="PreScheduleFollowupID")]
		public EntitySet<PreScheduleFollowupDetail> PreScheduleFollowupDetails
		{
			get
			{
				return this._PreScheduleFollowupDetails;
			}
			set
			{
				this._PreScheduleFollowupDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PreScheduleFollowupDetails(PreScheduleFollowupDetail entity)
		{
			this.SendPropertyChanging();
			entity.PreScheduleFollowup = this;
		}
		
		private void detach_PreScheduleFollowupDetails(PreScheduleFollowupDetail entity)
		{
			this.SendPropertyChanging();
			entity.PreScheduleFollowup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreScheduleFollowupDetails")]
	public partial class PreScheduleFollowupDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PreScheduleFollowupDetailID;
		
		private System.Nullable<int> _TransportArrangementStatusID;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<int> _RSVPStatusID;
		
		private string _PickOffTime;
		
		private string _DropOffTime;
		
		private string _Comments;
		
		private System.Nullable<int> _PreScheduleFollowupID;
		
		private System.Nullable<bool> _IsTransportBooked;
		
		private EntityRef<PreScheduleFollowup> _PreScheduleFollowup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPreScheduleFollowupDetailIDChanging(int value);
    partial void OnPreScheduleFollowupDetailIDChanged();
    partial void OnTransportArrangementStatusIDChanging(System.Nullable<int> value);
    partial void OnTransportArrangementStatusIDChanged();
    partial void OnMemberIDChanging(System.Nullable<int> value);
    partial void OnMemberIDChanged();
    partial void OnRSVPStatusIDChanging(System.Nullable<int> value);
    partial void OnRSVPStatusIDChanged();
    partial void OnPickOffTimeChanging(string value);
    partial void OnPickOffTimeChanged();
    partial void OnDropOffTimeChanging(string value);
    partial void OnDropOffTimeChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnPreScheduleFollowupIDChanging(System.Nullable<int> value);
    partial void OnPreScheduleFollowupIDChanged();
    partial void OnIsTransportBookedChanging(System.Nullable<bool> value);
    partial void OnIsTransportBookedChanged();
    #endregion
		
		public PreScheduleFollowupDetail()
		{
			this._PreScheduleFollowup = default(EntityRef<PreScheduleFollowup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreScheduleFollowupDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PreScheduleFollowupDetailID
		{
			get
			{
				return this._PreScheduleFollowupDetailID;
			}
			set
			{
				if ((this._PreScheduleFollowupDetailID != value))
				{
					this.OnPreScheduleFollowupDetailIDChanging(value);
					this.SendPropertyChanging();
					this._PreScheduleFollowupDetailID = value;
					this.SendPropertyChanged("PreScheduleFollowupDetailID");
					this.OnPreScheduleFollowupDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportArrangementStatusID", DbType="Int")]
		public System.Nullable<int> TransportArrangementStatusID
		{
			get
			{
				return this._TransportArrangementStatusID;
			}
			set
			{
				if ((this._TransportArrangementStatusID != value))
				{
					this.OnTransportArrangementStatusIDChanging(value);
					this.SendPropertyChanging();
					this._TransportArrangementStatusID = value;
					this.SendPropertyChanged("TransportArrangementStatusID");
					this.OnTransportArrangementStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSVPStatusID", DbType="Int")]
		public System.Nullable<int> RSVPStatusID
		{
			get
			{
				return this._RSVPStatusID;
			}
			set
			{
				if ((this._RSVPStatusID != value))
				{
					this.OnRSVPStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RSVPStatusID = value;
					this.SendPropertyChanged("RSVPStatusID");
					this.OnRSVPStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickOffTime", DbType="NVarChar(5)")]
		public string PickOffTime
		{
			get
			{
				return this._PickOffTime;
			}
			set
			{
				if ((this._PickOffTime != value))
				{
					this.OnPickOffTimeChanging(value);
					this.SendPropertyChanging();
					this._PickOffTime = value;
					this.SendPropertyChanged("PickOffTime");
					this.OnPickOffTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropOffTime", DbType="NVarChar(5)")]
		public string DropOffTime
		{
			get
			{
				return this._DropOffTime;
			}
			set
			{
				if ((this._DropOffTime != value))
				{
					this.OnDropOffTimeChanging(value);
					this.SendPropertyChanging();
					this._DropOffTime = value;
					this.SendPropertyChanged("DropOffTime");
					this.OnDropOffTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreScheduleFollowupID", DbType="Int")]
		public System.Nullable<int> PreScheduleFollowupID
		{
			get
			{
				return this._PreScheduleFollowupID;
			}
			set
			{
				if ((this._PreScheduleFollowupID != value))
				{
					if (this._PreScheduleFollowup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreScheduleFollowupIDChanging(value);
					this.SendPropertyChanging();
					this._PreScheduleFollowupID = value;
					this.SendPropertyChanged("PreScheduleFollowupID");
					this.OnPreScheduleFollowupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTransportBooked", DbType="Bit")]
		public System.Nullable<bool> IsTransportBooked
		{
			get
			{
				return this._IsTransportBooked;
			}
			set
			{
				if ((this._IsTransportBooked != value))
				{
					this.OnIsTransportBookedChanging(value);
					this.SendPropertyChanging();
					this._IsTransportBooked = value;
					this.SendPropertyChanged("IsTransportBooked");
					this.OnIsTransportBookedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PreScheduleFollowup_PreScheduleFollowupDetail", Storage="_PreScheduleFollowup", ThisKey="PreScheduleFollowupID", OtherKey="PreScheduleFollowupID", IsForeignKey=true)]
		public PreScheduleFollowup PreScheduleFollowup
		{
			get
			{
				return this._PreScheduleFollowup.Entity;
			}
			set
			{
				PreScheduleFollowup previousValue = this._PreScheduleFollowup.Entity;
				if (((previousValue != value) 
							|| (this._PreScheduleFollowup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PreScheduleFollowup.Entity = null;
						previousValue.PreScheduleFollowupDetails.Remove(this);
					}
					this._PreScheduleFollowup.Entity = value;
					if ((value != null))
					{
						value.PreScheduleFollowupDetails.Add(this);
						this._PreScheduleFollowupID = value.PreScheduleFollowupID;
					}
					else
					{
						this._PreScheduleFollowupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PreScheduleFollowup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RSVPStatus")]
	public partial class RSVPStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RSVPStatusID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRSVPStatusIDChanging(int value);
    partial void OnRSVPStatusIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public RSVPStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSVPStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RSVPStatusID
		{
			get
			{
				return this._RSVPStatusID;
			}
			set
			{
				if ((this._RSVPStatusID != value))
				{
					this.OnRSVPStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RSVPStatusID = value;
					this.SendPropertyChanged("RSVPStatusID");
					this.OnRSVPStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(70)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleDetails")]
	public partial class ScheduleDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleDetailID;
		
		private string _Item;
		
		private System.Nullable<int> _ScheduleID;
		
		private System.Nullable<System.TimeSpan> _StartTime;
		
		private System.Nullable<System.TimeSpan> _EndTime;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleDetailIDChanging(int value);
    partial void OnScheduleDetailIDChanged();
    partial void OnItemChanging(string value);
    partial void OnItemChanged();
    partial void OnScheduleIDChanging(System.Nullable<int> value);
    partial void OnScheduleIDChanged();
    partial void OnStartTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnEndTimeChanged();
    #endregion
		
		public ScheduleDetail()
		{
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleDetailID
		{
			get
			{
				return this._ScheduleDetailID;
			}
			set
			{
				if ((this._ScheduleDetailID != value))
				{
					this.OnScheduleDetailIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleDetailID = value;
					this.SendPropertyChanged("ScheduleDetailID");
					this.OnScheduleDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="NVarChar(500)")]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int")]
		public System.Nullable<int> ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleDetail", Storage="_Schedule", ThisKey="ScheduleID", OtherKey="ScheduleID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleDetails.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleDetails.Add(this);
						this._ScheduleID = value.ScheduleID;
					}
					else
					{
						this._ScheduleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedules")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleID;
		
		private System.Nullable<System.DateTime> _DateOfEvent;
		
		private string _MealsToBeServed;
		
		private string _ProgramTitle;
		
		private System.Nullable<decimal> _PaymentExpected;
		
		private string _Team;
		
		private string _Notes;
		
		private EntitySet<MemberAttendance> _MemberAttendances;
		
		private EntitySet<ScheduleDetail> _ScheduleDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleIDChanging(int value);
    partial void OnScheduleIDChanged();
    partial void OnDateOfEventChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfEventChanged();
    partial void OnMealsToBeServedChanging(string value);
    partial void OnMealsToBeServedChanged();
    partial void OnProgramTitleChanging(string value);
    partial void OnProgramTitleChanged();
    partial void OnPaymentExpectedChanging(System.Nullable<decimal> value);
    partial void OnPaymentExpectedChanged();
    partial void OnTeamChanging(string value);
    partial void OnTeamChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Schedule()
		{
			this._MemberAttendances = new EntitySet<MemberAttendance>(new Action<MemberAttendance>(this.attach_MemberAttendances), new Action<MemberAttendance>(this.detach_MemberAttendances));
			this._ScheduleDetails = new EntitySet<ScheduleDetail>(new Action<ScheduleDetail>(this.attach_ScheduleDetails), new Action<ScheduleDetail>(this.detach_ScheduleDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfEvent", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfEvent
		{
			get
			{
				return this._DateOfEvent;
			}
			set
			{
				if ((this._DateOfEvent != value))
				{
					this.OnDateOfEventChanging(value);
					this.SendPropertyChanging();
					this._DateOfEvent = value;
					this.SendPropertyChanged("DateOfEvent");
					this.OnDateOfEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealsToBeServed", DbType="NVarChar(50)")]
		public string MealsToBeServed
		{
			get
			{
				return this._MealsToBeServed;
			}
			set
			{
				if ((this._MealsToBeServed != value))
				{
					this.OnMealsToBeServedChanging(value);
					this.SendPropertyChanging();
					this._MealsToBeServed = value;
					this.SendPropertyChanged("MealsToBeServed");
					this.OnMealsToBeServedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramTitle", DbType="NVarChar(50)")]
		public string ProgramTitle
		{
			get
			{
				return this._ProgramTitle;
			}
			set
			{
				if ((this._ProgramTitle != value))
				{
					this.OnProgramTitleChanging(value);
					this.SendPropertyChanging();
					this._ProgramTitle = value;
					this.SendPropertyChanged("ProgramTitle");
					this.OnProgramTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentExpected", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PaymentExpected
		{
			get
			{
				return this._PaymentExpected;
			}
			set
			{
				if ((this._PaymentExpected != value))
				{
					this.OnPaymentExpectedChanging(value);
					this.SendPropertyChanging();
					this._PaymentExpected = value;
					this.SendPropertyChanged("PaymentExpected");
					this.OnPaymentExpectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team", DbType="NVarChar(200)")]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this.OnTeamChanging(value);
					this.SendPropertyChanging();
					this._Team = value;
					this.SendPropertyChanged("Team");
					this.OnTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_MemberAttendance", Storage="_MemberAttendances", ThisKey="ScheduleID", OtherKey="ScheduleID")]
		public EntitySet<MemberAttendance> MemberAttendances
		{
			get
			{
				return this._MemberAttendances;
			}
			set
			{
				this._MemberAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleDetail", Storage="_ScheduleDetails", ThisKey="ScheduleID", OtherKey="ScheduleID")]
		public EntitySet<ScheduleDetail> ScheduleDetails
		{
			get
			{
				return this._ScheduleDetails;
			}
			set
			{
				this._ScheduleDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MemberAttendances(MemberAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_MemberAttendances(MemberAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_ScheduleDetails(ScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleDetails(ScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubscriptionYears")]
	public partial class SubscriptionYear : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubscriptionYearID;
		
		private string _Description;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _YearStartDate;
		
		private System.Nullable<System.DateTime> _YearEndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubscriptionYearIDChanging(int value);
    partial void OnSubscriptionYearIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnYearStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnYearStartDateChanged();
    partial void OnYearEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnYearEndDateChanged();
    #endregion
		
		public SubscriptionYear()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionYearID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubscriptionYearID
		{
			get
			{
				return this._SubscriptionYearID;
			}
			set
			{
				if ((this._SubscriptionYearID != value))
				{
					this.OnSubscriptionYearIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionYearID = value;
					this.SendPropertyChanged("SubscriptionYearID");
					this.OnSubscriptionYearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(5)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearStartDate", DbType="Date")]
		public System.Nullable<System.DateTime> YearStartDate
		{
			get
			{
				return this._YearStartDate;
			}
			set
			{
				if ((this._YearStartDate != value))
				{
					this.OnYearStartDateChanging(value);
					this.SendPropertyChanging();
					this._YearStartDate = value;
					this.SendPropertyChanged("YearStartDate");
					this.OnYearStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> YearEndDate
		{
			get
			{
				return this._YearEndDate;
			}
			set
			{
				if ((this._YearEndDate != value))
				{
					this.OnYearEndDateChanging(value);
					this.SendPropertyChanging();
					this._YearEndDate = value;
					this.SendPropertyChanged("YearEndDate");
					this.OnYearEndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeamMembers")]
	public partial class TeamMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeamMemberID;
		
		private string _TeamMemberFirstName;
		
		private string _TeamMemberLastName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamMemberIDChanging(int value);
    partial void OnTeamMemberIDChanged();
    partial void OnTeamMemberFirstNameChanging(string value);
    partial void OnTeamMemberFirstNameChanged();
    partial void OnTeamMemberLastNameChanging(string value);
    partial void OnTeamMemberLastNameChanged();
    #endregion
		
		public TeamMember()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamMemberID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeamMemberID
		{
			get
			{
				return this._TeamMemberID;
			}
			set
			{
				if ((this._TeamMemberID != value))
				{
					this.OnTeamMemberIDChanging(value);
					this.SendPropertyChanging();
					this._TeamMemberID = value;
					this.SendPropertyChanged("TeamMemberID");
					this.OnTeamMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamMemberFirstName", DbType="NVarChar(100)")]
		public string TeamMemberFirstName
		{
			get
			{
				return this._TeamMemberFirstName;
			}
			set
			{
				if ((this._TeamMemberFirstName != value))
				{
					this.OnTeamMemberFirstNameChanging(value);
					this.SendPropertyChanging();
					this._TeamMemberFirstName = value;
					this.SendPropertyChanged("TeamMemberFirstName");
					this.OnTeamMemberFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamMemberLastName", DbType="NVarChar(100)")]
		public string TeamMemberLastName
		{
			get
			{
				return this._TeamMemberLastName;
			}
			set
			{
				if ((this._TeamMemberLastName != value))
				{
					this.OnTeamMemberLastNameChanging(value);
					this.SendPropertyChanging();
					this._TeamMemberLastName = value;
					this.SendPropertyChanged("TeamMemberLastName");
					this.OnTeamMemberLastNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportArrangementStatus")]
	public partial class TransportArrangementStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransportArrangementStatusID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransportArrangementStatusIDChanging(int value);
    partial void OnTransportArrangementStatusIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TransportArrangementStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportArrangementStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransportArrangementStatusID
		{
			get
			{
				return this._TransportArrangementStatusID;
			}
			set
			{
				if ((this._TransportArrangementStatusID != value))
				{
					this.OnTransportArrangementStatusIDChanging(value);
					this.SendPropertyChanging();
					this._TransportArrangementStatusID = value;
					this.SendPropertyChanged("TransportArrangementStatusID");
					this.OnTransportArrangementStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(80)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwMemberAttendance")]
	public partial class vwMemberAttendance
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private int _MemberAttendanceID;
		
		private System.Nullable<int> _ScheduleID;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<bool> _HasAttended;
		
		private System.Nullable<bool> _HasPaid;
		
		private System.Nullable<decimal> _AmountPaid;
		
		private string _PaymentRecievedBy;
		
		private System.Nullable<int> _PaymentMethodID;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private string _Narration;
		
		private System.Nullable<bool> _IsFeeWaived;
		
		private int _IsSubscriptionPaid;
		
		private System.Nullable<System.DateTime> _DateOfEvent;
		
		public vwMemberAttendance()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberAttendanceID", DbType="Int NOT NULL")]
		public int MemberAttendanceID
		{
			get
			{
				return this._MemberAttendanceID;
			}
			set
			{
				if ((this._MemberAttendanceID != value))
				{
					this._MemberAttendanceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int")]
		public System.Nullable<int> ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this._ScheduleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this._MemberID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttended", DbType="Bit")]
		public System.Nullable<bool> HasAttended
		{
			get
			{
				return this._HasAttended;
			}
			set
			{
				if ((this._HasAttended != value))
				{
					this._HasAttended = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPaid", DbType="Bit")]
		public System.Nullable<bool> HasPaid
		{
			get
			{
				return this._HasPaid;
			}
			set
			{
				if ((this._HasPaid != value))
				{
					this._HasPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this._AmountPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRecievedBy", DbType="NVarChar(50)")]
		public string PaymentRecievedBy
		{
			get
			{
				return this._PaymentRecievedBy;
			}
			set
			{
				if ((this._PaymentRecievedBy != value))
				{
					this._PaymentRecievedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodID", DbType="Int")]
		public System.Nullable<int> PaymentMethodID
		{
			get
			{
				return this._PaymentMethodID;
			}
			set
			{
				if ((this._PaymentMethodID != value))
				{
					this._PaymentMethodID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this._PaymentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Narration", DbType="NVarChar(50)")]
		public string Narration
		{
			get
			{
				return this._Narration;
			}
			set
			{
				if ((this._Narration != value))
				{
					this._Narration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFeeWaived", DbType="Bit")]
		public System.Nullable<bool> IsFeeWaived
		{
			get
			{
				return this._IsFeeWaived;
			}
			set
			{
				if ((this._IsFeeWaived != value))
				{
					this._IsFeeWaived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubscriptionPaid", DbType="Int NOT NULL")]
		public int IsSubscriptionPaid
		{
			get
			{
				return this._IsSubscriptionPaid;
			}
			set
			{
				if ((this._IsSubscriptionPaid != value))
				{
					this._IsSubscriptionPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfEvent", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfEvent
		{
			get
			{
				return this._DateOfEvent;
			}
			set
			{
				if ((this._DateOfEvent != value))
				{
					this._DateOfEvent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwSubscriptionSummary")]
	public partial class vwSubscriptionSummary
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private int _MemberAttendanceID;
		
		private System.Nullable<int> _ScheduleID;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<bool> _HasAttended;
		
		private System.Nullable<bool> _HasPaid;
		
		private System.Nullable<decimal> _AmountPaid;
		
		private string _PaymentRecievedBy;
		
		private System.Nullable<int> _PaymentMethodID;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private string _Narration;
		
		private System.Nullable<bool> _IsFeeWaived;
		
		private int _IsSubscriptionPaid;
		
		private System.Nullable<decimal> _SubscriptionAmountPaid;
		
		private System.Nullable<System.DateTime> _DateOfEvent;
		
		private string _Team;
		
		private System.Nullable<decimal> _weeklyPayment;
		
		private string _weeklyPaymentDesc;
		
		public vwSubscriptionSummary()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberAttendanceID", DbType="Int NOT NULL")]
		public int MemberAttendanceID
		{
			get
			{
				return this._MemberAttendanceID;
			}
			set
			{
				if ((this._MemberAttendanceID != value))
				{
					this._MemberAttendanceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int")]
		public System.Nullable<int> ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this._ScheduleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this._MemberID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttended", DbType="Bit")]
		public System.Nullable<bool> HasAttended
		{
			get
			{
				return this._HasAttended;
			}
			set
			{
				if ((this._HasAttended != value))
				{
					this._HasAttended = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPaid", DbType="Bit")]
		public System.Nullable<bool> HasPaid
		{
			get
			{
				return this._HasPaid;
			}
			set
			{
				if ((this._HasPaid != value))
				{
					this._HasPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this._AmountPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRecievedBy", DbType="NVarChar(50)")]
		public string PaymentRecievedBy
		{
			get
			{
				return this._PaymentRecievedBy;
			}
			set
			{
				if ((this._PaymentRecievedBy != value))
				{
					this._PaymentRecievedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodID", DbType="Int")]
		public System.Nullable<int> PaymentMethodID
		{
			get
			{
				return this._PaymentMethodID;
			}
			set
			{
				if ((this._PaymentMethodID != value))
				{
					this._PaymentMethodID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this._PaymentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Narration", DbType="NVarChar(50)")]
		public string Narration
		{
			get
			{
				return this._Narration;
			}
			set
			{
				if ((this._Narration != value))
				{
					this._Narration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFeeWaived", DbType="Bit")]
		public System.Nullable<bool> IsFeeWaived
		{
			get
			{
				return this._IsFeeWaived;
			}
			set
			{
				if ((this._IsFeeWaived != value))
				{
					this._IsFeeWaived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubscriptionPaid", DbType="Int NOT NULL")]
		public int IsSubscriptionPaid
		{
			get
			{
				return this._IsSubscriptionPaid;
			}
			set
			{
				if ((this._IsSubscriptionPaid != value))
				{
					this._IsSubscriptionPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionAmountPaid", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SubscriptionAmountPaid
		{
			get
			{
				return this._SubscriptionAmountPaid;
			}
			set
			{
				if ((this._SubscriptionAmountPaid != value))
				{
					this._SubscriptionAmountPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfEvent", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfEvent
		{
			get
			{
				return this._DateOfEvent;
			}
			set
			{
				if ((this._DateOfEvent != value))
				{
					this._DateOfEvent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team", DbType="NVarChar(200)")]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this._Team = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weeklyPayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> weeklyPayment
		{
			get
			{
				return this._weeklyPayment;
			}
			set
			{
				if ((this._weeklyPayment != value))
				{
					this._weeklyPayment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weeklyPaymentDesc", DbType="VarChar(30)")]
		public string weeklyPaymentDesc
		{
			get
			{
				return this._weeklyPaymentDesc;
			}
			set
			{
				if ((this._weeklyPaymentDesc != value))
				{
					this._weeklyPaymentDesc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwPreScheduleFollowup")]
	public partial class vwPreScheduleFollowup
	{
		
		private string _Name;
		
		private int _MemberID;
		
		private int _PreScheduleFollowupID;
		
		private System.Nullable<int> _RSVPStatusID;
		
		private string _PickOffTime;
		
		private string _DropOffTime;
		
		private string _Comments;
		
		private System.Nullable<bool> _IsTransportBooked;
		
		private int _PreScheduleFollowupDetailID;
		
		private string _PhoneNumber1;
		
		private string _PhoneNumber2;
		
		private string _PhoneNumber3;
		
		private string _MemberTransportationID;
		
		public vwPreScheduleFollowup()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(101)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL")]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this._MemberID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreScheduleFollowupID", DbType="Int NOT NULL")]
		public int PreScheduleFollowupID
		{
			get
			{
				return this._PreScheduleFollowupID;
			}
			set
			{
				if ((this._PreScheduleFollowupID != value))
				{
					this._PreScheduleFollowupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSVPStatusID", DbType="Int")]
		public System.Nullable<int> RSVPStatusID
		{
			get
			{
				return this._RSVPStatusID;
			}
			set
			{
				if ((this._RSVPStatusID != value))
				{
					this._RSVPStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickOffTime", DbType="NVarChar(101)")]
		public string PickOffTime
		{
			get
			{
				return this._PickOffTime;
			}
			set
			{
				if ((this._PickOffTime != value))
				{
					this._PickOffTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropOffTime", DbType="NVarChar(101)")]
		public string DropOffTime
		{
			get
			{
				return this._DropOffTime;
			}
			set
			{
				if ((this._DropOffTime != value))
				{
					this._DropOffTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this._Comments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTransportBooked", DbType="Bit")]
		public System.Nullable<bool> IsTransportBooked
		{
			get
			{
				return this._IsTransportBooked;
			}
			set
			{
				if ((this._IsTransportBooked != value))
				{
					this._IsTransportBooked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreScheduleFollowupDetailID", DbType="Int NOT NULL")]
		public int PreScheduleFollowupDetailID
		{
			get
			{
				return this._PreScheduleFollowupDetailID;
			}
			set
			{
				if ((this._PreScheduleFollowupDetailID != value))
				{
					this._PreScheduleFollowupDetailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber1", DbType="NVarChar(50)")]
		public string PhoneNumber1
		{
			get
			{
				return this._PhoneNumber1;
			}
			set
			{
				if ((this._PhoneNumber1 != value))
				{
					this._PhoneNumber1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber2", DbType="NVarChar(50)")]
		public string PhoneNumber2
		{
			get
			{
				return this._PhoneNumber2;
			}
			set
			{
				if ((this._PhoneNumber2 != value))
				{
					this._PhoneNumber2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber3", DbType="NVarChar(50)")]
		public string PhoneNumber3
		{
			get
			{
				return this._PhoneNumber3;
			}
			set
			{
				if ((this._PhoneNumber3 != value))
				{
					this._PhoneNumber3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberTransportationID", DbType="NVarChar(100)")]
		public string MemberTransportationID
		{
			get
			{
				return this._MemberTransportationID;
			}
			set
			{
				if ((this._MemberTransportationID != value))
				{
					this._MemberTransportationID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgrameTimeTemplate")]
	public partial class ProgrameTimeTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private System.Nullable<System.TimeSpan> _StartTime;
		
		private System.Nullable<System.TimeSpan> _EndTime;
		
		private string _Template;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnStartTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnEndTimeChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    #endregion
		
		public ProgrameTimeTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(MAX)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotificationStaff")]
	public partial class NotificationStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationID;
		
		private string _UserName;
		
		private System.Nullable<bool> _IsDisplayed;
		
		private System.Nullable<bool> _IsCancelled;
		
		private System.Nullable<bool> _IsEmailNotification;
		
		private System.Nullable<bool> _IsDisplayOnScreenNotification;
		
		private System.Nullable<bool> _IsMobileTextNotification;
		
		private System.Nullable<System.DateTime> _DisplayedDate;
		
		private System.Nullable<System.DateTime> _CancelledDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationIDChanging(int value);
    partial void OnNotificationIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsDisplayedChanging(System.Nullable<bool> value);
    partial void OnIsDisplayedChanged();
    partial void OnIsCancelledChanging(System.Nullable<bool> value);
    partial void OnIsCancelledChanged();
    partial void OnIsEmailNotificationChanging(System.Nullable<bool> value);
    partial void OnIsEmailNotificationChanged();
    partial void OnIsDisplayOnScreenNotificationChanging(System.Nullable<bool> value);
    partial void OnIsDisplayOnScreenNotificationChanged();
    partial void OnIsMobileTextNotificationChanging(System.Nullable<bool> value);
    partial void OnIsMobileTextNotificationChanged();
    partial void OnDisplayedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDisplayedDateChanged();
    partial void OnCancelledDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelledDateChanged();
    #endregion
		
		public NotificationStaff()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationID
		{
			get
			{
				return this._NotificationID;
			}
			set
			{
				if ((this._NotificationID != value))
				{
					this.OnNotificationIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationID = value;
					this.SendPropertyChanged("NotificationID");
					this.OnNotificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(90)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisplayed", DbType="Bit")]
		public System.Nullable<bool> IsDisplayed
		{
			get
			{
				return this._IsDisplayed;
			}
			set
			{
				if ((this._IsDisplayed != value))
				{
					this.OnIsDisplayedChanging(value);
					this.SendPropertyChanging();
					this._IsDisplayed = value;
					this.SendPropertyChanged("IsDisplayed");
					this.OnIsDisplayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit")]
		public System.Nullable<bool> IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmailNotification", DbType="Bit")]
		public System.Nullable<bool> IsEmailNotification
		{
			get
			{
				return this._IsEmailNotification;
			}
			set
			{
				if ((this._IsEmailNotification != value))
				{
					this.OnIsEmailNotificationChanging(value);
					this.SendPropertyChanging();
					this._IsEmailNotification = value;
					this.SendPropertyChanged("IsEmailNotification");
					this.OnIsEmailNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisplayOnScreenNotification", DbType="Bit")]
		public System.Nullable<bool> IsDisplayOnScreenNotification
		{
			get
			{
				return this._IsDisplayOnScreenNotification;
			}
			set
			{
				if ((this._IsDisplayOnScreenNotification != value))
				{
					this.OnIsDisplayOnScreenNotificationChanging(value);
					this.SendPropertyChanging();
					this._IsDisplayOnScreenNotification = value;
					this.SendPropertyChanged("IsDisplayOnScreenNotification");
					this.OnIsDisplayOnScreenNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMobileTextNotification", DbType="Bit")]
		public System.Nullable<bool> IsMobileTextNotification
		{
			get
			{
				return this._IsMobileTextNotification;
			}
			set
			{
				if ((this._IsMobileTextNotification != value))
				{
					this.OnIsMobileTextNotificationChanging(value);
					this.SendPropertyChanging();
					this._IsMobileTextNotification = value;
					this.SendPropertyChanged("IsMobileTextNotification");
					this.OnIsMobileTextNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DisplayedDate
		{
			get
			{
				return this._DisplayedDate;
			}
			set
			{
				if ((this._DisplayedDate != value))
				{
					this.OnDisplayedDateChanging(value);
					this.SendPropertyChanging();
					this._DisplayedDate = value;
					this.SendPropertyChanged("DisplayedDate");
					this.OnDisplayedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelledDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CancelledDate
		{
			get
			{
				return this._CancelledDate;
			}
			set
			{
				if ((this._CancelledDate != value))
				{
					this.OnCancelledDateChanging(value);
					this.SendPropertyChanging();
					this._CancelledDate = value;
					this.SendPropertyChanged("CancelledDate");
					this.OnCancelledDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotificationTypes")]
	public partial class NotificationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationTypeID;
		
		private string _Description;
		
		private EntitySet<Notification> _Notifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationTypeIDChanging(int value);
    partial void OnNotificationTypeIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public NotificationType()
		{
			this._Notifications = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications), new Action<Notification>(this.detach_Notifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationTypeID
		{
			get
			{
				return this._NotificationTypeID;
			}
			set
			{
				if ((this._NotificationTypeID != value))
				{
					this.OnNotificationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationTypeID = value;
					this.SendPropertyChanged("NotificationTypeID");
					this.OnNotificationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotificationType_Notification", Storage="_Notifications", ThisKey="NotificationTypeID", OtherKey="NotificationTypeID")]
		public EntitySet<Notification> Notifications
		{
			get
			{
				return this._Notifications;
			}
			set
			{
				this._Notifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.NotificationType = this;
		}
		
		private void detach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.NotificationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notifications")]
	public partial class Notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationID;
		
		private System.Nullable<int> _NotificationTypeID;
		
		private System.Nullable<bool> _IsVisibility;
		
		private System.Nullable<int> _NotificationYear;
		
		private EntityRef<NotificationType> _NotificationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationIDChanging(int value);
    partial void OnNotificationIDChanged();
    partial void OnNotificationTypeIDChanging(System.Nullable<int> value);
    partial void OnNotificationTypeIDChanged();
    partial void OnIsVisibilityChanging(System.Nullable<bool> value);
    partial void OnIsVisibilityChanged();
    partial void OnNotificationYearChanging(System.Nullable<int> value);
    partial void OnNotificationYearChanged();
    #endregion
		
		public Notification()
		{
			this._NotificationType = default(EntityRef<NotificationType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationID
		{
			get
			{
				return this._NotificationID;
			}
			set
			{
				if ((this._NotificationID != value))
				{
					this.OnNotificationIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationID = value;
					this.SendPropertyChanged("NotificationID");
					this.OnNotificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationTypeID", DbType="Int")]
		public System.Nullable<int> NotificationTypeID
		{
			get
			{
				return this._NotificationTypeID;
			}
			set
			{
				if ((this._NotificationTypeID != value))
				{
					if (this._NotificationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNotificationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationTypeID = value;
					this.SendPropertyChanged("NotificationTypeID");
					this.OnNotificationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisibility", DbType="Bit")]
		public System.Nullable<bool> IsVisibility
		{
			get
			{
				return this._IsVisibility;
			}
			set
			{
				if ((this._IsVisibility != value))
				{
					this.OnIsVisibilityChanging(value);
					this.SendPropertyChanging();
					this._IsVisibility = value;
					this.SendPropertyChanged("IsVisibility");
					this.OnIsVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationYear", DbType="Int")]
		public System.Nullable<int> NotificationYear
		{
			get
			{
				return this._NotificationYear;
			}
			set
			{
				if ((this._NotificationYear != value))
				{
					this.OnNotificationYearChanging(value);
					this.SendPropertyChanging();
					this._NotificationYear = value;
					this.SendPropertyChanged("NotificationYear");
					this.OnNotificationYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotificationType_Notification", Storage="_NotificationType", ThisKey="NotificationTypeID", OtherKey="NotificationTypeID", IsForeignKey=true)]
		public NotificationType NotificationType
		{
			get
			{
				return this._NotificationType.Entity;
			}
			set
			{
				NotificationType previousValue = this._NotificationType.Entity;
				if (((previousValue != value) 
							|| (this._NotificationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NotificationType.Entity = null;
						previousValue.Notifications.Remove(this);
					}
					this._NotificationType.Entity = value;
					if ((value != null))
					{
						value.Notifications.Add(this);
						this._NotificationTypeID = value.NotificationTypeID;
					}
					else
					{
						this._NotificationTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NotificationType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddonServices")]
	public partial class AddonService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddonServiceID;
		
		private System.Nullable<int> _AddonServiceTypeId;
		
		private System.Nullable<System.DateTime> _ServiceDate;
		
		private System.Nullable<int> _StaffID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<int> _MemberId;
		
		private string _Comments;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<AddonServiceType> _AddonServiceType;
		
		private EntityRef<DBSSTaff> _DBSSTaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddonServiceIDChanging(int value);
    partial void OnAddonServiceIDChanged();
    partial void OnAddonServiceTypeIdChanging(System.Nullable<int> value);
    partial void OnAddonServiceTypeIdChanged();
    partial void OnServiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnServiceDateChanged();
    partial void OnStaffIDChanging(System.Nullable<int> value);
    partial void OnStaffIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnMemberIdChanging(System.Nullable<int> value);
    partial void OnMemberIdChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public AddonService()
		{
			this._Member = default(EntityRef<Member>);
			this._AddonServiceType = default(EntityRef<AddonServiceType>);
			this._DBSSTaff = default(EntityRef<DBSSTaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonServiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddonServiceID
		{
			get
			{
				return this._AddonServiceID;
			}
			set
			{
				if ((this._AddonServiceID != value))
				{
					this.OnAddonServiceIDChanging(value);
					this.SendPropertyChanging();
					this._AddonServiceID = value;
					this.SendPropertyChanged("AddonServiceID");
					this.OnAddonServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonServiceTypeId", DbType="Int")]
		public System.Nullable<int> AddonServiceTypeId
		{
			get
			{
				return this._AddonServiceTypeId;
			}
			set
			{
				if ((this._AddonServiceTypeId != value))
				{
					if (this._AddonServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddonServiceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AddonServiceTypeId = value;
					this.SendPropertyChanged("AddonServiceTypeId");
					this.OnAddonServiceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ServiceDate
		{
			get
			{
				return this._ServiceDate;
			}
			set
			{
				if ((this._ServiceDate != value))
				{
					this.OnServiceDateChanging(value);
					this.SendPropertyChanging();
					this._ServiceDate = value;
					this.SendPropertyChanged("ServiceDate");
					this.OnServiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="Int")]
		public System.Nullable<int> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._DBSSTaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_AddonService", Storage="_Member", ThisKey="MemberId", OtherKey="MemberID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.AddonServices.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.AddonServices.Add(this);
						this._MemberId = value.MemberID;
					}
					else
					{
						this._MemberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddonServiceType_AddonService", Storage="_AddonServiceType", ThisKey="AddonServiceTypeId", OtherKey="AddonServiceTypeId", IsForeignKey=true)]
		public AddonServiceType AddonServiceType
		{
			get
			{
				return this._AddonServiceType.Entity;
			}
			set
			{
				AddonServiceType previousValue = this._AddonServiceType.Entity;
				if (((previousValue != value) 
							|| (this._AddonServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddonServiceType.Entity = null;
						previousValue.AddonServices.Remove(this);
					}
					this._AddonServiceType.Entity = value;
					if ((value != null))
					{
						value.AddonServices.Add(this);
						this._AddonServiceTypeId = value.AddonServiceTypeId;
					}
					else
					{
						this._AddonServiceTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AddonServiceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DBSSTaff_AddonService", Storage="_DBSSTaff", ThisKey="StaffID", OtherKey="DBSStaffID", IsForeignKey=true)]
		public DBSSTaff DBSSTaff
		{
			get
			{
				return this._DBSSTaff.Entity;
			}
			set
			{
				DBSSTaff previousValue = this._DBSSTaff.Entity;
				if (((previousValue != value) 
							|| (this._DBSSTaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DBSSTaff.Entity = null;
						previousValue.AddonServices.Remove(this);
					}
					this._DBSSTaff.Entity = value;
					if ((value != null))
					{
						value.AddonServices.Add(this);
						this._StaffID = value.DBSStaffID;
					}
					else
					{
						this._StaffID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DBSSTaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddonServiceTypes")]
	public partial class AddonServiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddonServiceTypeId;
		
		private string _Description;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<AddonService> _AddonServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddonServiceTypeIdChanging(int value);
    partial void OnAddonServiceTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifiedByChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public AddonServiceType()
		{
			this._AddonServices = new EntitySet<AddonService>(new Action<AddonService>(this.attach_AddonServices), new Action<AddonService>(this.detach_AddonServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonServiceTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddonServiceTypeId
		{
			get
			{
				return this._AddonServiceTypeId;
			}
			set
			{
				if ((this._AddonServiceTypeId != value))
				{
					this.OnAddonServiceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AddonServiceTypeId = value;
					this.SendPropertyChanged("AddonServiceTypeId");
					this.OnAddonServiceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddonServiceType_AddonService", Storage="_AddonServices", ThisKey="AddonServiceTypeId", OtherKey="AddonServiceTypeId")]
		public EntitySet<AddonService> AddonServices
		{
			get
			{
				return this._AddonServices;
			}
			set
			{
				this._AddonServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddonServices(AddonService entity)
		{
			this.SendPropertyChanging();
			entity.AddonServiceType = this;
		}
		
		private void detach_AddonServices(AddonService entity)
		{
			this.SendPropertyChanging();
			entity.AddonServiceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DBSSTaff")]
	public partial class DBSSTaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DBSStaffID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _DBSNumber;
		
		private string _EmailAddress;
		
		private string _UserName;
		
		private EntitySet<AddonService> _AddonServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDBSStaffIDChanging(int value);
    partial void OnDBSStaffIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnDBSNumberChanging(string value);
    partial void OnDBSNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public DBSSTaff()
		{
			this._AddonServices = new EntitySet<AddonService>(new Action<AddonService>(this.attach_AddonServices), new Action<AddonService>(this.detach_AddonServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBSStaffID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DBSStaffID
		{
			get
			{
				return this._DBSStaffID;
			}
			set
			{
				if ((this._DBSStaffID != value))
				{
					this.OnDBSStaffIDChanging(value);
					this.SendPropertyChanging();
					this._DBSStaffID = value;
					this.SendPropertyChanged("DBSStaffID");
					this.OnDBSStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="Date")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBSNumber", DbType="NVarChar(50)")]
		public string DBSNumber
		{
			get
			{
				return this._DBSNumber;
			}
			set
			{
				if ((this._DBSNumber != value))
				{
					this.OnDBSNumberChanging(value);
					this.SendPropertyChanging();
					this._DBSNumber = value;
					this.SendPropertyChanged("DBSNumber");
					this.OnDBSNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(200)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(90)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DBSSTaff_AddonService", Storage="_AddonServices", ThisKey="DBSStaffID", OtherKey="StaffID")]
		public EntitySet<AddonService> AddonServices
		{
			get
			{
				return this._AddonServices;
			}
			set
			{
				this._AddonServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddonServices(AddonService entity)
		{
			this.SendPropertyChanging();
			entity.DBSSTaff = this;
		}
		
		private void detach_AddonServices(AddonService entity)
		{
			this.SendPropertyChanging();
			entity.DBSSTaff = null;
		}
	}
}
#pragma warning restore 1591
